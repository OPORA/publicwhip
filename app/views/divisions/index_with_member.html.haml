- content_for :title do
  - if params[:filter] == "rebellions"
    All rebel votes —
  - else
    Voting Record —
  = @member.full_name2

- if params[:filter] == "rebellions"
  - set_meta_tags description: "A list of all votes in parliament where #{@member.full_name_no_electorate} voted against the majority of their party."
- else
  - set_meta_tags description: "A list of all votes in parliament that #{@member.full_name_no_electorate} could have attended."

= render "members/member_page_header", member: @member

%h2#divisions All #{params[:filter] == "rebellions" ? "rebeliions" : "Votes"}

- if params[:filter] == "rebellions"
  %p
    = member.name_without_title
    has
    - if @member.person.rebellions > 0
      voted against the majority of their party
      = pluralize(@member.person.rebellions, "time")
    - else
      never voted against the majority of their party
    since
    - # TODO get the data starting dates dynamically
    - if member.person.earliest_member.entered_house < (Date.new(2006,2,7))
      February 2006.
    -else
      entering Parliament in #{member.person.earliest_member.since}.

    %small= link_to "explain rebellions", help_faq_path(anchor: "rebellion")
- else
  %p All votes #{@member.full_name_no_electorate} could have attended.

%ol.divisions-list.list-unstyled{class: active_house_for_list_class(@house)}
  - @divisions_or_nil_with_member.each do |m|
    - if m[:division].present?
      = render m[:division], member: m[:member]
    - else
      %li.object-item
        - if params[:filter] == "rebellions"
          No rebellions listed as
          = member_type_party_place_sentence(m[:member])
        - else
          No votes listed as
          = member_type_party_place_sentence(m[:member])

.index-pagination
  = paginate @divisions_or_nil_with_member, window: 2, outer_window: 3
